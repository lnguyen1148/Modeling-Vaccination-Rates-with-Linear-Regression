mpg %>% select(manufacturer,cty) %>% arrange(cty)
mpg %>% select(manufacturer,cty,hwy) %>% arrange(cty)
mpg %>% select(manufacturer, cty, hwy) %>% arrange(cty, hwy)
mpg %>% select(manufacturer, cty, hwy) %>% arrange(desc(cty))
mpg %>% filter(manufacturer == "audi") %>% arrange(-cty) %>% select(manufacturer, cty, hwy)
> mpg %>% filter(manufacturer=="honda") %>% arrange(-cty && cty>25) %>%
select(manufacturer, cty, hwy)
> mpg %>% filter(manufacturer=="honda") %>% arrange(-cty && cty>25) %>% select(manufacturer, cty, hwy)
> mpg %>% filter(manufacturer=="honda") %>% arrange(-cty) %>% select(manufacturer, cty, hwy)
mpg %>% filter(manufacturer=="honda") %>% arrange(-cty && cty>25) %>% select(manufacturer, cty, hwy)
mpg %>% filter(cty>25) %>% arrange(desc(cty)) %>% select(manufacturer)
mpg %>% filter(manufacturer=="honda"  && cty>25) %>% arrange(-cty) %>% select(manufacturer, cty, hwy)
mpg %>% filter(manufacturer=="honda", cty>25) %>% arrange(desc(cty)) %>% select(manufacturer)
mpg %>% summarise(max(cty))
library(tidyverse)
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
str(flights)
flights %>% mutate(total_delay = dep_delay + arr_delay)
flights %>% mutate(total_delay = dep_delay + arr_delay) %>% summarise(mean(total_delay))
flights %>% mutate(total_delay = dep_delay + arr_delay) %>% summarise(mean(total_delay), na.rm = TRUE)
> flights %>% mutate(total_delay = dep_delay + arr_delay) %>% summarise(mean(total_delay))
flights %>% mutate(total_delay = dep_delay + arr_delay) %>% summarise(mean(total_delay))
mpg %>% top_n(1, cyl)
mpg %>% summarise(max(cyl))
mpg %>% filer(manufacturer=='honda') %>% summarise(max(cyl))
mpg %>% filter(manufacturer=='honda') %>% summarise(max(cyl))
mpg %>% filter(manufacturer=='honda' | manufacturer=='toyota') %>% summarise(max(cyl))
mpg %>% filter(manufacturer=='honda' | manufacturer=='toyota') %>% summarise(max(cyl), min(cyl))
mpg %>% group_by(manufacturer) %>% summarise(max(cyl))
mpg %>% group_by(manufacturer) %>% summarise(max(cyl), min(cyl))
mpg %>% group_by(manufacturer, year) %>% summarise(max(cyl), min(cyl))
flights %>% mutate(total_delay = dep_delay + arr_delay) %>% summarise(mean(total_delay))
flights %>% summarise(mean(arr_delay))
flights %>% mutate(total_delay = dep_delay + arr_delay) %>% select(total_delay) %>% summarise(mean(total_delay))
flights %>% mutate(total_delay = dep_delay + arr_delay) %>% select(total_delay)
flights %>% mutate(total_delay = dep_delay + arr_delay) %>% select(total_delay) %>% summarise(mean(total_delay))
library(tidyverse)
table4a
relig_income
relig_income %>% pivot_longer(-religion, names_to = "income", values_to = "freq")
?pivot_longer
table4a %>% pivot_longer(-country, names_to = "year", values_to = "cases")
table4a %>% pivot_longer(2:3, names_to = "year", values_to = "cases")
table4a %>% pivot_longer(c('1999', '2000'), names_to = "year", values_to = "cases")
grades <- tibble(CWID=c(1234567, 2356902, 5005667), NAME=c("Mary", "Lee", "Elena"),
CPSC120=c(3,4,NA), CPSC121=c(3.3,3,2), CPSC131=c(3,4,3.7), MATH338=c(3,NA,3.3))
grades
grades %>% pivot_longer(3:6, names_to = "course", values_to = "grade", values_drop_na = TRUE)
grades %>% pivot_longer(c(-CWID, -NAME), names_to = "course", values_to = "grade", values_drop_na = TRUE)
?pivot_wider
table3
table3 %>% separate(rate, into = c("cases", "population"))
library(tidyverse)
library(readr)
population <- read_csv("CPSC 375/Homework/population.csv")
View(population)
countyseats <- read_csv("CPSC 375/Homewor/countyseats.csv")
countyseats <- read_csv("CPSC 375/Homework/countyseats.csv")
view(countyseats)
population %>% inner_join(countyseats)
?inner_join
?inner_join
population %>% inner_join(countyseats, by=c(state="statename"))
population %>% inner_join(countyseats, by=c(state="statename", county="countyseat"))
population %>% inner_join(countyseats, by=c(state="statename", county="countyname"))
population %>% inner_join(countyseats, by=c(state="statename", county="countyname", year="countyseat"))
view(billboard)
str(billboard)
lib
library(ggplot2)
library(tidyverse)
library(ggplot2)
m <- lm(data=iris, Petal.Length~Petal.Width+Sepal.Length)
summary(m)
mycf <- coef(m)
mycf
ggplot(data=iris) + geom_point((mapping = aes(y = Petal.Width + Sepal.Length, x= Petal.Width)) + geom_abline(slope= mycf[2], intercept = mycf[1]))
ggplot(data=iris) + geom_point(mapping = aes(y = Petal.Width + Sepal.Length, x= Petal.Width)) + geom_abline(slope= mycf[2], intercept = mycf[1])
?billoard
library(tidyverse)
?billoard
?billboard
billboard %>% mutate(totalweeks=sum(4:79))
billboard %>% mutate(totalweeks=sum(4:79)) %>% view()
library(tidyverse)
billboard %>% view()
tidy_billboard <- billboard %>% pivot_longer(-c(1:3), names_to = "week", values_to = "rank", values_drop_na = TRUE) %>% view()
tidy_billboard %>% group_by(track) %>% summarise(num_of_weeks = n()) %>% filter(num_of_weeks > 35) %>% view()
tidy_billboard %>% view()
tidy_billboard %>% group_by(track) %>% summarise(num_of_weeks = n()) %>% select(track, artist, num_of_weeks) %>% filter(num_of_weeks > 35) %>% view()
tidy_billboard %>% group_by(track, artist) %>% summarise(num_of_weeks = n()) %>% filter(num_of_weeks > 35) %>% view()
tidy_billboard %>% group_by(track) %>% summarise(num_of_weeks = n()) %>% filter(num_of_weeks > 35) %>% view()
tidy_billboard %>% group_by(track, artist) %>% summarise(num_of_weeks = n()) %>% filter(num_of_weeks > 35) %>% view()
library(readr)
demographics <- read_csv("CPSC 375/dataset/demographics.csv")
View(demographics)
tidy_billboard %>% view()
tidy_demo <- demographics %>% select(-3) %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
tidy_demo %>% view()
library(tidyverse)
a1 <- c(5,0,-1)
a2 <- c(7,3,5)
a1 - a2
sqrt(sum(a1 - a2)^2)
sqrt(sum((a1 - a2)^2))
c <- c(5, 0, 1)
a1 <- c(5, 1, 3)
a2 <- c(6, 0, 2)
a3 <- c(4, 0, 2)
a4 <- c(5, 1, 3)
a5 <- c(5, 0, 2)
d1 <- sqrt(sum((c - a1)^2))
d1
d2 <- sqrt(sum((c - a2)^2))
d2
d3 <- sqrt(sum((c - a3)^2))
d3
d4 <- sqrt(sum((c - a4)^2))
d4
d5 <- sqrt(sum((c - a5)^2))
d5
library(tidyverse)
install.packages("class")
library(class)
library(readr)
pima_indians_diabetes_resampled <- read_csv("CPSC 375/dataset/pima-indians-diabetes-resampled.csv")
View(pima_indians_diabetes_resampled)
mydata  <- pima_indians_diabetes_resampled %>% select(c(1, 7, 9)) %>% view()
trainfeatures <- mydata[1:500, 1:2] %>% view()
trainlabels <- mydata[1:500, 3] %>% view()
testfeatures <- mydata[500:768, 1:2] %>% view()
testfeatures <- mydata[501:768, 1:2] %>% view()
testlabels <- mydata[501:768, 3] %>% view()
knn(train = trainfeatures, test = testfeatures, cl=trainlabels)
?knn
knn(train = trainfeatures, test = testfeatures, cl=trainlabels[ ,1])
cl = trainlabels[ ,1]
knn(train = trainfeatures, test = testfeatures, cl)
length(cl)
cl = trainlabels[,1]
length(cl)
trainlabels
library(tidyverse)
bodyfat <- read_csv("http://staff.pubhealth.ku.dk/~tag/Teaching/share/data/Bodyfat.csv") %>% view()
library(ggplot2)
ggplot(data = bodyfat) + geom_point(mapping = aes(y=bodyfat, x=height))
ggplot(data = bodyfat) + geom_point(mapping = aes(y=bodyfat, x=Height))
ggplot(data = bodyfat) + geom_point(mapping = aes(y=Height, x=bodyfat))
ggplot(data = bodyfat) + geom_point(mapping = aes(y=bodyfat, x=Height))
?Bodyfat
str(bodyfat)
summarise(mean(Height))
bodyfat %>% summarise(mean(Height))
bodyfat <- bodyfat %>% filter(Height > 30) %>% view()
bodyfat %>% summarise(mean(Height))
ggplot(data = bodyfat) + geom_point(mapping = aes(y=bodyfat, x=Height))
ggplot(data = bodyfat) + geom_point(mapping = aes(y=Height, x=bodyfat))
mydata <- bodyfat
ggplot(data = mydata) + geom_point(mapping = aes(y=boyfat, x=Height))
ggplot(data = mydata) + geom_point(mapping = aes(y=bodyfat, x=Height))
bodyfat_df <- bodyfat
model <- lm(data = bodyfat_df, bodyfat~Height)
summary(model)
coef(model)
model <- lm(data = bodyfat_df, bodyfat~Weight)
summary(model)
mycf <- coef(model)
mycf
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=Weight)) + geom_abline(slope = mycf[2], intercept = mycf[1], color = "red")
library(modelr)
bodyfat_df %>% add_residuals(model) %>% view()
bodyfat_df <- bodyfat_df %>% add_residuals(model) %>% view()
ggplot(data = bodyfat_df) + geom_histogram(aes(x=resid))
residuals(model)
predx <- data.frame(Weight=c(150, 300))
predx
?predict
?interval
?confidence
?predict
predict(model, predx, interval = "confidence", level = 0.99)
predict(model, predx, interval = "prediction", level = 0.99)
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=Weight)) + geom_abline(slope = mycf[2], intercept = mycf[1], color = "red")
model <- lm(data = bodyfat_df, bodyfat~Weight + Height)
summary(model)
predx <- data.frame(Weight=c(150, 300), Height=c(70, 70))
predx
predict(model, predx, interval = "confidence", level = 0.99)
mycf <- coef(model)
mycf
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=Weight, color=Height))
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=Weight, color=Height)) +geom_line(mapping = aes(y=bodyfat, x=Weight, color=Height))
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=Weight, color=Height)) +geom_line(mapping = aes(y=bodyfat, x=Weight), color=Height)
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=Weight, color=Height))
library(tidyverse)
library(modelr)
bodyfat_df %>% view()
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=Weight, color=Height))
bodyfat_df <- bodyfat_df %>% mutate(BMI=Weight/(Height^2)) %>% view()
model_f <- lm(data = bodyfat_df, bodyfat~BMI)
summary(model_f)
mycf <- coef(model_f)
mycf
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=BMI)) + geom_abline(slope = mycf[2], intercept = mycf[1])
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=BMI)) + geom_abline(slope = mycf[2], intercept = mycf[1], color = "red")
predx <- data.frame(Weight=c(150, 300), Height=c(70, 70))
predict(model_f, predx, interval = "confidence", level = 0.99)
predx <- predx %>% mutate(BMI=Weight/(Height^2)) %>% view()
predx <- predx %>% mutate(BMI=Weight/(Height^2)) %>% select(BMI) %>% view()
predict(model_f, predx, interval = "confidence", level = 0.99)
bodyfat_df <- bodyfat_df %>% mutate(BMI=(Weight/2.2)/((Height*0.0254)^2)) %>% view()
model_f1 <- lm(data = bodyfat_df, bodyfat~BMI)
summary(model_f1)
mycf1 <- coef(model_f1)
mycf1
> ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=BMI)) + geom_abline(slope = mycf[2], intercept = mycf[1], color = "red") + geom_abline(slope = mycf1[2], intercept = mycf1[1], color = "blue")
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=BMI)) + geom_abline(slope = mycf[2], intercept = mycf[1], color = "red") + geom_abline(slope = mycf1[2], intercept = mycf1[1], color = "blue")
ggplot(data = bodyfat_df) + geom_point(mapping = aes(y=bodyfat, x=BMI)) + geom_abline(slope = mycf[2], intercept = mycf[1], color = "red")
predx <- predx %>% mutate(BMI=Weight/(Height^2)) %>% view()
> bodyfat_df <- bodyfat_df %>% mutate(BMI=Weight/(Height^2)) %>% view()
bodyfat_df <- bodyfat_df %>% mutate(BMI=Weight/(Height^2)) %>% view()
model_f <- lm(data = bodyfat_df, bodyfat~BMI)
summary(model_f)
?cut
bodyfat_df %>% mutate(AgeGroup = cut (Age, breaks = c(-Inf,40,60,Inf), labels = c("Young", "Middle", "Older"))) %>% view()
bodyfat_df <- bodyfat_df %>% mutate(AgeGroup = cut (Age, breaks = c(-Inf,40,60,Inf), labels = c("Young", "Middle", "Older"))) %>% view()
str(bodyfat_df)
model_g <- lm(data = bodyfat_df, bodyfat~BMI+AgeGroup)
summary(model_g)
mycf <- coef(model_g)
mycf
bodyfat_df <- bodyfat_df %>% add_predictions(model_g) %>% view()
ggplot(data = bodyfat_df) + geom_point(mapping = aes(x=BMI, y=bodyfat, color=AgeGroup)) + geom_point(mapping = aes(x=BMI, y=pred, color=AgeGroup))
ggplot(data = bodyfat_df) + geom_point(mapping = aes(x=BMI, y=bodyfat, color=AgeGroup)) + geom_line(mapping = aes(x=BMI, y=pred, color=AgeGroup))
?pivot_longer
library(tidyverse)
?pivot_longer
?seq
library(readr)
hospital_beds <- read_csv("CPSC 375/Project/hospital_beds.csv")
View(hospital_beds)
library(tidyverse)
read_csv("https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/global_data/time_series_covid19_vaccine_doses_admin_global.csv")
vaccine_global <- read_csv("https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/global_data/time_series_covid19_vaccine_doses_admin_global.csv")
str(vaccine_global)
vaccine_global %>% write_csv("CPSC 375/Project/vaccine_global.csv")
library(tidyverse)
> my_data <- read_csv("CPSC 375/dataset/pima-indians-diabetes-resampled.csv")
my_data <- read_csv("CPSC 375/dataset/pima-indians-diabetes-resampled.csv")
my_data <- my_data %>% filter(Glucose >0)
normalize <- function(x) { return ((x - min(x)) / (max(x) - min(x)))}
my_data <- my_data %>% mutate(Preg.norm = normalize(Preg))
my_data <- my_data %>% mutate(Pedigree.norm = normalize(Pedigree))
my_data <- my_data %>% mutate(Glucose.norm = normalize(Glucose))
trainfeatures <- my_data %>% select(-9) %>% slice(1:500)
trainlabels <- my_data %>% select(9) %>% slice(1:500)
testfeatures <- my_data %>% select(-9) %>% slice(501:763)
testlabels <- my_data %>% select(9) %>% slice(501:763)
trainfeatures_f <- trainfeatures %>% select(c(9, 10))
testfeatures_f <- testfeatures %>% select(c(9, 10))
predicted_f <- knn(train = trainfeatures_f, test = testfeatures_f, cl = trainlabels[[1]], k = 1)
library(class)
predicted_f <- knn(train = trainfeatures_f, test = testfeatures_f, cl = trainlabels[[1]], k = 1)
table(testlabels[[1]], predicted_f)
trainfeatures_g  <- trainfeatures %>% select(c(9, 10, 11))
testfeatures_g  <- testfeatures %>% select(c(9, 10, 11))
predicted_g <- knn(train = trainfeatures_g, test = testfeatures_g, cl = trainlabels[[1]], k = 1)
table(testlabels[[1]], predicted_g)
predicted_h <- knn(train = trainfeatures_g, test = testfeatures_g, cl = trainlabels[[1]], k = 5)
table(testlabels[[1]], predicted_h)
predicted_i <- knn(train = trainfeatures_g, test = testfeatures_g, cl = trainlabels[[1]], k = 11)
table(testlabels[[1]], predicted_i)
my_data %>% view()
library(tidyverse)
my_data <- read_csv("https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv")
my_data %>% view()
my_data.ts <- ts(my_data, frequency = 12)
acf(my_data)
View(my_data)
acf(my_data, lag.max = 100)
acf(my_data, lag.max = 300)
acf(my_data, lag.max = 1000)
acf(my_data, lag.max = 500)
acf(my_data, lag.max = 400)
acf(my_data, lag.max = 500)
acf(my_data, lag.max = 600)
acf(my_data, lag.max = 500)
my_data.ts <- ts(my_data, frequency = 365)
plot(decompose(my_data.ts))
acf(my_data, lag.max = 500)
plot(decompose(my_data.ts))
library(tidyverse)
library(tidytext)
install.packages("tidytext")
library(tidytext)
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
text_df <- tibble(line = 1:4, text = text)
text_df %>% unnest_tokens(input=text, output="word")
?unnest_tokens
text
text_df %>% unnest_tokens(input=text, output="word") %>% count(word)
library(readr)
hashcsufnew <- read_csv("CPSC 375/dataset/hashcsufnew.csv")
View(hashcsufnew)
text_df <- hashcsufnew %>% select(text) %>% view()
tweet <- hashcsufnew %>% select(text) %>% view()
tweet %>% unnest_tokens(input = text, output = word, token = "hashtags")
tweet %>% unnest_tokens(input = text, output = word, token = "tweets")
tweet %>% unnest_tokens(input = text, output = word, token = "tweets") %>% count(word)
my_data <- tweet %>% unnest_tokens(input = text, output = word, token = "tweets") %>% count(word)
my_data %>% view()
install.packages("wordcloud")
library(wordcloud)
wordcloud(c("Hello", "how", "are", "you"), c(50,40,20,40))
my_data %>% filter(n > 200) %>% view()
big_words <- my_data %>% filter(n > 200) %>% view()
big_words %>% wordcloud(1, 2)
wordcloud( big_words$word, big_words$n)
library(tidyverse)
library(readr)
breast_cancer_wisconsin <- read_csv("CPSC 375/dataset/breast-cancer-wisconsin.csv")
View(breast_cancer_wisconsin)
mydata <- read_csv("CPSC 375/dataset/breast-cancer-wisconsin.csv") %>% view()
mydata %>% select(Class = B) %>% count()
mydata %>% filter(Class = B) %>% count()
mydata %>% filter(Class == B) %>% count()
mydata %>% filter(Class == 'B') %>% count()
mydata %>% filter(Class == 'M') %>% count()
beast_cancer_means <- kmeans(mydata[,c(2, 3, 7)], centers = 2)
beast_cancer_means$centers
?kmeans
beast_cancer_means <- kmeans(mydata[,c(2, 3, 7)], centers = 2, nstart = 10)
beast_cancer_means$centers
beast_cancer_means <- kmeans(mydata[,c(2, 3, 7)], centers = 2, nstart = 10)
beast_cancer_means$centers
beast_cancer_means <- kmeans(mydata[,c(2, 3, 7)], centers = 2, nstart = 10)
beast_cancer_means$centers
breast_cancer_means <- kmeans(mydata[,c(2, 3, 7)], centers = 2, nstart = 10)
breast_cancer_means$centers
table(breast_cancer_means)
breast_cancer_means
table(mydata$Class, breast_cancer_means$cluster)
breast_cancer_means <- kmeans(mydata[,c(2, 3, 7)], centers = 2, nstart = 10)
table(mydata$Class, breast_cancer_means$cluster)
library(tidyverse)
library(modelr)
# Read datasets
vaccine_doses <- read_csv("https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/global_data/time_series_covid19_vaccine_doses_admin_global.csv")
setwd("~/CPSC 375/Project")
hospital_beds <- read_csv("hospital_beds.csv")
demographics <- read_csv("demographics.csv")
# Discard unneeded data
vaccine_doses <- vaccine_doses %>% filter(is.na(Province_State))
vaccine_doses <- vaccine_doses %>% select(-c(1:7, 9:11))
#Tidy up vaccine_doses table
vaccine_doses <- vaccine_doses %>% pivot_longer(cols = -c(1,2), names_to = 'Date', values_to = 'Num_of_shots')
vaccine_doses <- vaccine_doses %>% filter(!is.na(Num_of_shots) & Num_of_shots != 0)
# Calculations
vaccine_doses %>% mutate(vaccine_rate = Num_of_shots / Population)
vaccine_doses <- vaccine_doses %>% group_by(Country_Region) %>% mutate(day_since_start = 1:n())
# Discard unneeded data of hospital beds. Keep the most recent 5 years
hospital_beds <- hospital_beds %>% group_by(Country) %>% arrange(desc(Year)) %>% slice(1:5)
# Discard unneeded data of demographics
demographics <- demographics %>% select(c(1, 4, 5))
# Tidy up demographics table
demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
vaccine_doses %>% view()
vaccine_doses %>% select(Num_of_shots, is.na()) %>% view()
vaccine_doses %>% select(Num_of_shots) %>% filter(is.na()) %>% view()
vaccine_doses %>% filter(is.na(Num_of_shots)) %>% view()
vaccine_doses %>% filter(is.na(day_since_start)) %>% view()
vaccine_doses %>% filter(is.na(Date)) %>% view()
vaccine_doses %>% filter(is.na(Population)) %>% view()
hospital_beds %>% view()
hospital_beds %>% filter(is.na(Year)) %>% view()
hospital_beds %>% filter(is.na(`Hospital beds (per 10 000 population)`)) %>% view()
# Add up female and male population
demographics <- demographics %>% mutate(SP.POP.80UP = SP.POP.80UP.FE + SP.POP.80UP.MA)
demographics %>% view()
# Tidy up demographics table
demographics <- demographics %>% pivot_wider(names_from = `Series Code`, values_from = YR2015)
demographics %>% view()
# Add up female and male population
demographics <- demographics %>% mutate(SP.POP.80UP = SP.POP.80UP.FE + SP.POP.80UP.MA)
demographics <- demographics %>% mutate(SP.POP.1564.IN = SP.POP.1564.FE.IN + SP.POP.1564.MA.IN)
demographics <- demographics %>% mutate(SP.POP.0014.IN = SP.POP.0014.FE.IN + SP.POP.0014.MA.IN)
demographics <- demographics %>% mutate(SP.DYN.AMRT = SP.DYN.AMRT.FE + SP.DYN.AMRT.MA)
demographics <- demographics %>% mutate(SP.POP.TOTL.IN = SP.POP.TOTL.FE.IN + SP.POP.TOTL.MA.IN)
demographics <- demographics %>% mutate(SP.POP.65UP.IN = SP.POP.65UP.FE.IN + SP.POP.65UP.MA.IN)
# Remove old columns
demographics <- demographics %>% select(-c(5:16))
demographics %>% view()
# Fix the countries' names
demographics <- demographics %>% mutate(`Country Name` = replace(`Country Name`, `Country Name`=="Korea, Rep.", "South Korea"))
demographics <- demographics %>% mutate(`Country Name` = replace(`Country Name`, `Country Name`=="Iran, Islamic Rep.", "Iran"))
hospital_beds <- hospital_beds %>% mutate(Country = replace(Country, Country=="Iran (Islamic Republic of)", "Iran"))
hospital_beds <- hospital_beds %>% mutate(Country = replace(Country, Country=="United Kingdom of Great Britain and Northern Ireland", "United Kingdom"))
hospital_beds <- hospital_beds %>% mutate(Country = replace(Country, Country=="Republic of Korea", "South Korea"))
vaccine_doses <- vaccine_doses %>% mutate(Country_Region = replace(Country_Region, Country_Region=="Korea, South", "South Korea"))
# Rename column names to match variables before joining
demographics <- demographics %>% rename(Country = `Country Name`)
vaccine_doses <- vaccine_doses %>% rename(Country = Country_Region)
demographics %>% view()
vaccine_doses %>% view()
# Merge 3 tables
my_data <- vaccine_doses %>% full_join(hospital_beds, by = "Country")
my_data %>% view()
my_data <- my_data %>% full_join(demographics, by = "Country")
my_data %>% view()
my_data %>% write_csv("my_data")
vaccine_doses %>% view()
# Calculations
vaccine_doses <- vaccine_doses %>% mutate(vaccine_rate = Num_of_shots / Population)
vaccine_doses %>% view()
prepared_data <- vaccine_doses %>% full_join(hospital_beds, by = "Country")
prepared_data %>% view()
hospital_beds %>% view()
hospital_beds <- hospital_beds %>% group_by(Country) %>% filter(max(Year)) %>% view()
hospital_beds <- hospital_beds %>% group_by(Country) %>% filter(Year == max(Year)) %>% view()
beds <- read_csv("hospital_beds.csv") %>% view()
hospital_beds %>% select(-2) %>% view()
hospital_beds <- hospital_beds %>% select(-2) %>% view()
rm
rm(my_data)
# Merge 3 tables
my_data <- vaccine_doses %>% full_join(hospital_beds, by = "Country")
my_data %>% view()
my_data <- my_data %>% full_join(demographics, by = "Country")
my_data %>% view()
my_data %>% write_csv("my_data")
demographics1 <- read_csv("demographics.csv") %>% view()
my_data %>% group_by(Country) %>% filter(SP.DYN.LE00.IN == max(SP.DYN.LE00.IN)) %>% view()
my_data %>% group_by(Country) %>% filter(SP.DYN.LE00.IN == max(SP.DYN.LE00.IN)) %>% select(Country, SP.DYN.LE00.IN) %>% view()
my_data %>% group_by(Country) %>% filter(SP.DYN.LE00.IN == max(SP.DYN.LE00.IN)) %>% select(Country, SP.DYN.LE00.IN) %>% summarise(group_by(Country))
my_data %>% group_by(Country) %>% select(Country, SP.DYN.LE00.IN) %>% view()
my_data %>% select(Country, SP.DYN.LE00.IN) %>% group_by(Country) %>% view()
my_data %>% select(Country, SP.DYN.LE00.IN) %>% group_by(Country, SP.DYN.LE00.IN) %>% view()
my_data %>% select(Country, SP.DYN.LE00.IN) %>% group_by(Country) %>% view()
my_data %>% group_by(Country, SP.DYN.LE00.IN) %>% select(Country, SP.DYN.LE00.IN) %>% view()
my_data %>% summarise(group_by(Country))
?group_by
str(my_data)
my_data %>% view()
demographics1 %>% view()
demographics1 %>% filter(`Country Name`== 'Japan') %>% view()
my_data %>% view()
my_data %>% mutate(Proportion_65UP = SP.POP.65UP.IN / SP.POP.TOTL) %>% view()
my_data <- my_data %>% mutate(Proportion_65UP = SP.POP.65UP.IN / SP.POP.TOTL)
my_data <- my_data %>% mutate(Proportion_1564 = SP.POP.1564.IN / SP.POP.TOTL) %>% view()
library(ggplot2)
my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start)) %>% select(Country, day_since_start, vaccine_rate) %>% view()
my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start)) %>% select(Country, day_since_start, vaccine_rate, rm.na = TRUE) %>% view()
my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start)) %>% select(Country, day_since_start, (vaccine_rate, rm.na = TRUE)) %>% view()
my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start)) %>% select(Country, day_since_start, vaccine_rate, na.rm = TRUE) %>% view()
my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start), !is.na(vaccine_rate)) %>% select(Country, day_since_start, vaccine_rate) %>% view()
my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start), !is.na(vaccine_rate)) %>% ggplot() + geom_point(mapping = aes(x = day_since_start, y = vaccine_rate))
vaccine_doses %>% view()
my_data <- my_data %>% mutate(Proportion_urban = SP.URB.TOTL / SP.POP.TOTL) %>% view()
model1 <- my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start), !is.na(vaccine_rate)) %>% lm(vaccine_rate ~ Population + `Hospital beds (per 10 000 population)`)
modeling_data <- my_data %>% group_by(Country) %>% filter(day_since_start == max(day_since_start), !is.na(vaccine_rate)) %>% view()
model1 <- lm(data = modeling_data, vaccine_rate ~ Population + `Hospital beds (per 10 000 population)`)
summary(model1)
model1 <- lm(data = modeling_data, vaccine_rate ~ Population + `Hospital beds (per 10 000 population)`, na.rm = TRUE)
model1 <- lm(data = modeling_data, vaccine_rate ~ Population)
summary(model1)
model1 <- lm(data = modeling_data, vaccine_rate ~ `Hospital beds (per 10 000 population)`)
summary(model1)
model1 <- lm(data = modeling_data, vaccine_rate ~ `Hospital beds (per 10 000 population)` + SP.DYN.AMRT)
summary(model1)
model1 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.AMRT)
summary(model1)
model1 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.LE00.IN)
summary(model1)
model1 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.LE00.IN + SP.DYN.AMRT)
summary(model1)
model1 <- lm(data = modeling_data, vaccine_rate ~ Proportion_65UP)
summary(model1)
model6 <- lm(data = modeling_data, vaccine_rate ~ Proportion_1564)
summary(model6)
model7 <- lm(data = modeling_data, vaccine_rate ~ Proportion_urban)
summary(model7)
model8 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.LE00.IN + Proportion_65UP)
summary(model8)
model9 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.LE00.IN + Proportion_65UP + SP.DYN.AMRT)
summary(model9)
model10 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.LE00.IN + Proportion_65UP + `Hospital beds (per 10 000 population)`)
summary(model10)
ggplot(data = modeling_data), geom_point(mapping = aes(x = SP.DYN.LE00.IN, y = vaccine_rate))
ggplot(data = modeling_data) + geom_point(mapping = aes(x = SP.DYN.LE00.IN, y = vaccine_rate))
ggplot(data = modeling_data) + geom_point(mapping = aes(x = SP.DYN.AMRT, y = vaccine_rate))
model5 <- lm(data = modeling_data, vaccine_rate ~ Proportion_65UP)
model4 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.LE00.IN)
model3 <- lm(data = modeling_data, vaccine_rate ~ SP.DYN.AMRT)
> model2 <- lm(data = modeling_data, vaccine_rate ~ `Hospital beds (per 10 000 population)`)
model2 <- lm(data = modeling_data, vaccine_rate ~ `Hospital beds (per 10 000 population)`)
model1 <- lm(data = modeling_data, vaccine_rate ~ Population)
model1$r.squared
summary(model1)
summary(model1)$r.squared
model_name <- c("model1", "model2", "model3", "model4", "model5", "model6", "model7", "model8", "model9", "model10")
R2 <- c(summary(model1)$r.squared, summary(model2)$r.squared, summary(model3)$r.squared, summary(model4)$r.squared, summary(model5)$r.squared, summary(model6)$r.squared, summary(model7)$r.squared, summary(model8)$r.squared, summary(model9)$r.squared, summary(model10)$r.squared)
R2_summary <- data.frame(model_name, R2) %>% view()
ggplot(data = R2_summary) + geom_bar(mapping = aes(x = model_name, y = R2))
str(R2_summary)
ggplot(data = R2_summary, aes(x = model_name, y = R2)) + geom_bar()
ggplot(data = R2_summary, aes(x = model_name, y = R2)) + geom_bar(stat = identity)
ggplot(data = R2_summary, aes(x = model_name, y = R2)) + geom_bar(stat = 'identity')
